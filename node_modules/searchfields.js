/*
 * Skoop search operators. Encapsulates mapping of available search operators.
 */

var SearchFields = function (dbType) {
	this.operators = ["like", "contains", "not contains", "exists", "not exists", "ne", "gt", "lt",
	               "gte", "lte"];
	this.field = "_field_";
	this.value = "_value_";
	this.valArray = "_array_";
	// a : separated list identify the location of field, operator, and value
	this.mapping = [];
	loadMapping(this, dbType);
}

function loadMapping(self, dbType) {
	if (dbType === "mongo") {
		for (var i = 0; i < self.operators.length; i++) {
			if (self.operators[i] === "like")
				self.mapping[self.operators[i]] = "/^_value_/";
			else if (self.operators[i] === "contains")
				self.mapping[self.operators[i]] = self.field + ":$in:" + self.valArray;
			else if (self.operators[i] === "not contains")
				self.mapping[self.operators[i]] = self.field + ":$not:$all:" + self.valArray;
			else if (self.operators[i] === "exists")
				self.mapping[self.operators[i]] = self.field + ":$exists:true";
			else if (self.operators[i] === "not exists")
				self.mapping[self.operators[i]] = self.field + "$exists:false";
			else if (self.operators[i] === "ne")
				self.mapping[self.operators[i]] = self.field + ":$ne:" + self.value;
			else if (self.operators[i] === "gt")
				self.mapping[self.operators[i]] = self.field + ":$gt:" + self.value;
			else if (self.operators[i] === "lt")
				self.mapping[self.operators[i]] = self.field + ":$lt:" + self.value;
			else if (self.operators[i] === "gte")
				self.mapping[self.operators[i]] = self.field + ":$gte:" + self.value;
			else if (self.operators[i] === "lte")
				self.mapping[self.operators[i]] = self.field + ":$lte:" + self.value;
		}
	}
}

exports.SearchFields = SearchFields;
